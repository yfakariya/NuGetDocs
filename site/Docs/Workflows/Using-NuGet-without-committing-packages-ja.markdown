<!-- 4 02 14:45:05 2012 2575545b5129e10461e6405567e4ad1be4dcea8f -->
# ソース コントロールにパッケージをコミットしない NuGet の使用方法

元々の NuGet のワークフローでは、ソース コントロールに `Packages` フォルダーをコミットするものでした。その理由は、NuGet がない場合に開発者が一般的に行うことに一致しているためです。つまり、`Lib` なり `ExternalDependencies` なりといったフォルダーを作成し、バイナリを配置して、ソースコード管理にコミットし、他の人がビルドできるようにするというものです。

これは一部のユーザーでは上手く行きましたが、多くの人から、パッケージをソース コントロールにコミットしたくないという意見も聞きました。Mercurial や Git のような DVCS を使用する場合、バイナリをコミットすることで、時間とともにリポジトリのサイズがあり得ないくらいに大きくなり、クローンの作成がとてもとても苦痛なものになります。実際、これは NuGet の課題追跡システムにおけるトップリクエストの 1 つでした。

良いお知らせです。NuGet はこの問題を解決するために役立つワークフローを提供するようになり、さらにこれはセットアップが本当に簡単です。その方法は以下のとおりです。

## セットアップ

既に NuGet を使用しているか、または使用を計画しているソリューションがあり、パッケージをコミットしないワークフローをセットアップしたいとしましょう。

ソリューション エクスプローラーで _ソリューション_ ノードを右クリックし、_Enable NuGet Package Restore_ を選択します。

![Enable NuGet Package Restore コンテキストメニュ項目](images/enable-package-restore.png)

**以上です！** これで完了です。

## 詳細

実際に何が行われているのでしょうか？　これによって、ソリューション フォルダーに `NuGet.exe` と `NuGet.targets` MSBuild ファイルを含む `.nuget` という名前のソリューションフォルダーが追加されます。また、`NuGet.targets` MSBuild タスクをインポートするように、ソリューション内のすべてのプロジェクトを変更します。

![パッケージ復元ファイルを持つ新しいソリューション フォルダー](images/package-restore-solution.png)

これによって、プロジェクトのコンパイル時に、ビルドタスクが各プロジェクトの `packages.config` ファイルを検索し、そのファイル内の各パッケージに対して対応するパッケージが `packages` フォルダーに存在するか確認します。パッケージがない場合、ビルドタスクはパッケージをダウンロードして、パッケージをアンパックします。

復元のシナリオでは、NuGet はパッケージの復元時に正確なバージョンを取得します。アップグレードを実行することはありません。

## Mono

Mono の場合、プロジェクトファイルかソリューションに対して `xbuild` を実行できます。そうすれば、パッケージ復元が有効なプロジェクトでパッケージを復元できるはずです。